## Documentation: http://docs.travis-ci.com/user/languages/julia/
language: julia
sudo: required
os:
  - linux
  - osx
julia:
  - 1.0
  - 1
  - nightly
notifications:
  email: false
git:
  depth: 99999999

script:
    - export JULIA_PROJECT=""
    # Populate the precompile cache with an extraneous file, to catch issues like in #460
    - julia -e 'include(joinpath("test", "populate_compiled.jl"))'
    # Run the normal tests
    - julia --project -e 'using Pkg; Pkg.build(); Pkg.test(; coverage=true);'
    # Run the normal tests with file-watching (only on Linux where there are lots of workers and they are fast)
    - if [ "$TRAVIS_OS_NAME" = "linux" ]; then julia --project -e 'if VERSION >= v"1.3" using Pkg; Pkg.build(); Pkg.test(; test_args=["REVISE_TESTS_WATCH_FILES"], coverage=true); end'; fi
    # The REPL wasn't initialized, so the "Methods at REPL" tests didn't run. Pick those up now.
    - julia --project --code-coverage=user -e 'using InteractiveUtils, REPL, Revise; @async(Base.run_main_repl(true, true, false, true, false)); Revise.async_steal_repl_backend(); include(joinpath("test", "runtests.jl")); REPL.eval_user_input(:(exit()), Base.active_repl_backend)' "Methods at REPL"
    # Tests for when using polling
    - JULIA_REVISE_POLL=1 julia --code-coverage=user --project -e 'using Pkg, Revise; include(joinpath(dirname(pathof(Revise)), "..", "test", "polling.jl"))'
    # We also need to pick up the Git tests, but for that we need to `dev` the package
    - julia --code-coverage=user -e 'using Pkg; Pkg.develop(PackageSpec(path=".")); include(joinpath("test", "runtests.jl"))' "Git"
    # Running out of inotify storage (see #26)
    # - if [ "$TRAVIS_OS_NAME" = "linux" ]; then echo 4 | sudo tee -a /proc/sys/fs/inotify/max_user_watches; julia --project --code-coverage=user -e 'using Pkg, Revise; cd(joinpath(dirname(pathof(Revise)), "..", "test")); include("inotify.jl")'; fi

after_success:
  - julia -e 'import Pkg; Pkg.add("Coverage"); using Coverage; Codecov.submit(Codecov.process_folder())'

jobs:
  include:
    - stage: "Documentation"
      julia: 1.0
      os: linux
      script:
        - julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd()));
                                               Pkg.instantiate()'
        - julia --project=docs/ docs/make.jl
      after_success: skip
